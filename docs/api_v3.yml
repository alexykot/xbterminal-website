swagger: '2.0'
info:
  title: XBTerminal external payment module API
  termsOfService: proprietary
  version: "3"
host: xbterminal.io
tags:
  - name: auth
    description: authentication
  - name: merchants
    description: merchant registration, verification and update
  - name: devices
    description: device registration and access
  - name: payments
    description: payments and refunds
schemes:
  - https
basePath: /api/v3
produces:
  - application/json

paths:
  /token/:
    post:
      summary: Obtain auth token
      tags:
        - auth
      description: https://jwt.io/introduction/
      parameters:
        - name: email
          in: formData
          description: Merchant email
          required: true
          type: string
        - name: password
          in: formData
          description: Merchant password
          required: true
          type: string
          format: password
      responses:
        200:
          description: Auth token retrieved
          schema:
            title: AuthResponse
            type: object
            properties:
              token:
                type: string
                description: JWT auth token
          examples:
            application/json:
              token: eyJhbGci...
  /merchants/:
    post:
      summary: Register merchant
      tags:
        - merchants
      parameters:
        - name: company_name
          in: formData
          description: Company name
          required: true
          type: string
        - name: country
          in: formData
          description: ISO 3166-1 country code
          required: true
          type: string
        - name: contact_first_name
          in: formData
          description: Contact first name
          required: true
          type: string
        - name: contact_last_name
          in: formData
          description: Contact last name
          required: true
          type: string
        - name: contact_email
          in: formData
          description: Contact email
          required: true
          type: string
      responses:
        201:
          description: Merchant registered
          schema:
            $ref: '#/definitions/Merchant'
        400:
          description: Invalid parameters
  /merchants/{merchant_id}/:
    get:
      summary: Retrieve merchant details
      tags:
        - merchants
      parameters:
        - $ref: '#/parameters/merchant_id'
        - $ref: '#/parameters/auth'
      responses:
        200:
          description: Merchant details retrieved
          schema:
            $ref: '#/definitions/Merchant'
        401:
          description: Invalid auth header
        404:
          description: Merchant not found
  /merchants/{merchant_id}/upload_kyc/:
    post:
      summary: Upload KYC documents
      tags:
        - merchants
      parameters:
        - $ref: '#/parameters/merchant_id'
        - $ref: '#/parameters/auth'
        - name: id_document_frontside
          in: formData
          description: ID document front-side as base64 data URI
          required: true
          type: string
        - name: id_document_backside
          in: formData
          description: ID document back-side as base64 data URI
          required: true
          type: string
        - name: residence_document
          in: formData
          description: Residence document as base64 data URI
          required: true
          type: string
      responses:
        200:
          description: Documents uploaded successfully
          schema:
            $ref: '#/definitions/Merchant'
        401:
          description: Invalid auth header
        404:
          description: Merchant not found
  /devices/:
    post:
      summary: Register device
      tags:
        - devices
      parameters:
        - $ref: '#/parameters/auth'
        - name: name
          in: formData
          description: Device name
          required: true
          type: string
        - name: currency_code
          in: formData
          description: ISO 4217 currency code
          required: true
          type: string
      responses:
        200:
          description: Device registered
          schema:
            $ref: '#/definitions/Device'
        400:
          description: Invalid parameters
        401:
          description: Invalid auth header
  /devices/{device_key}/:
    get:
      summary: Get device details
      tags:
        - devices
      parameters:
        - $ref: '#/parameters/device_key'
        - $ref: '#/parameters/auth'
      responses:
        200:
          description: Device details retrieved
          schema:
            $ref: '#/definitions/Device'
        401:
          description: Invalid auth header
        404:
          description: Device not found
  /devices/{device_key}/list_transactions/:
    get:
      summary: List device transactions
      tags:
        - devices
      parameters:
        - $ref: '#/parameters/device_key'
        - $ref: '#/parameters/auth'
      responses:
        200:
          description: Transaction list retrieved
          schema:
            title: TransactionList
            type: array
            items:
              title: Transaction
              type: object
              properties:
                amount:
                  description: Transaction amount
                  type: string
                created_at:
                  description: Transcation time
                  type: string
                  format: date-time
                is_confirmed:
                  description: Confirmation status
                  type: boolean
        401:
          description: Invalid auth header
        404:
          description: Device not found
  /payments/:
    post:
      summary: Create payment order
      tags:
        - payments
      parameters:
        - $ref: '#/parameters/auth'
        - name: device
          in: formData
          description: Device key (device ID)
          required: false
          type: string
        - name: account
          in: formData
          description: Account ID
          required: false
          type: integer
        - name: amount
          in: formData
          description: Payment amount
          required: true
          type: string
        - name: bt_mac
          in: formData
          description: Bluetooth MAC address
          required: false
          type: string
      responses:
        200:
          description: Payment order created
          schema:
            title: PaymentInit
            type: object
            allOf:
              - $ref: '#/definitions/Payment'
              - type: object
                title: PaymentURI
                properties:
                  payment_uri:
                    description: Payment URI
                    type: string
                  payment_request:
                    description: Payment request (base64)
                    type: string
        400:
          description: Invalid parameters
        401:
          description: Invalid auth header
  /payments/{payment_uid}/:
    get:
      summary: Get payment details
      tags:
        - payments
      parameters:
        - $ref: '#/parameters/payment_uid'
        - $ref: '#/parameters/auth'
      responses:
        200:
          description: Payment details retrieved
          schema:
            $ref: '#/definitions/Payment'
        401:
          description: Invalid auth header
        404:
          description: Payment does not exist
  /payments/{payment_uid}/cancel/:
    post:
      summary: Cancel payment
      tags:
        - payments
      parameters:
        - $ref: '#/parameters/payment_uid'
        - $ref: '#/parameters/auth'
      responses:
        204:
          description: Payment cancelled
        401:
          description: Invalid auth header
        404:
          description: Payment does not exist or can't be cancelled
  /payments/{payment_uid}/request/:
    get:
      summary: Download BIP70 payment request
      tags:
        - payments
      description: This API endpoint doesn't require authentication
      parameters:
        - $ref: '#/parameters/payment_uid'
      produces:
        - application/bitcoin-paymentrequest
      responses:
        200:
          description: Payment request retrieved
          schema:
            title: PaymentRequest
            type: string
            format: binary
        404:
          description: Payment does not exist
  /payments/{payment_uid}/response/:
    post:
      summary: Upload BIP70 payment message
      tags:
        - payments
      description: This API endpoint doesn't require authentication
      parameters:
        - $ref: '#/parameters/payment_uid'
        - name: payment_message
          in: body
          description: BIP70 payment message
          required: true
          schema:
            type: string
            format: binary
      produces:
        - application/bitcoin-paymentack
      responses:
        200:
          description: Payment ACK retrieved
          schema:
            title: PaymentACK
            type: string
            format: binary
        400:
          description: Invalid payment message
        404:
          description: Payment does not exist
  /payments/{payment_uid}/receipt/:
    get:
      summary: Download payment receipt
      tags:
        - payments
      description: This API endpoint doesn't require authentication
      parameters:
        - $ref: '#/parameters/payment_uid'
      produces:
        - application/pdf
      responses:
        200:
          description: Payment receipt retrieved
          schema:
            title: Receipt
            type: string
            format: binary
        404:
          description: Payment does not exist or payment not completed


parameters:
  merchant_id:
    name: merchant_id
    in: path
    description: Merchant ID
    required: true
    type: integer
    format: int32
  auth:
    name: authorization
    in: header
    description: JWT authentication header
    required: true
    type: string
  device_key:
    name: device_key
    in: path
    description: Device key (device ID)
    required: true
    type: string
  payment_uid:
    name: payment_uid
    in: path
    description: Payment UID
    required: true
    type: string

definitions:
  Merchant:
    type: object
    properties:
      id:
        description: Merchant ID
        type: integer
        format: int32
      company_name:
        description: Company name
        type: string
      contact_first_name:
        description: Contact first name
        type: string
      contact_last_name:
        description: Contact last name
        type: string
      contact_email:
        description: Contact email
        type: string
      verification_status:
        description: KYC verification status
        type: string
  Device:
    type: object
    properties:
      name:
        description: Device name
        type: string
      currency_code:
        description: Device currency
        type: string
      key:
        description: Device key (device ID)
        type: string
      status:
        description: Device status
        type: string
  Payment:
    type: object
    properties:
      uid:
        description: Payment UID
        type: string
      fiat_amount:
        description: Amount in fiat currency
        type: number
      btc_amount:
        description: Amount in BTC
        type: number
      exchange_rate:
        description: Exchange rate
        type: number
      status:
        description: Payment status
        type: string
